{"ast":null,"code":"var _jsxFileName = \"/home/antonio/Documents/SovTech/Client/src/pages/HomePage/HomePage.tsx\",\n    _s = $RefreshSig$();\n\nimport './HomePage.css';\nimport React, { useEffect, useState } from 'react';\nimport Loader from 'react-loader-spinner';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSortAlphaDown, faSortAlphaUp } from '@fortawesome/free-solid-svg-icons';\nimport { useQuery, useLazyQuery } from '@apollo/client';\nimport { useStoreActions, useStoreState } from '../../store';\nimport { SearchBar } from '../../components/Custom/SearchBar/SearchBar';\nimport { Card } from '../../components/Custom/Card/Card';\nimport { ALL_PEOPLE, NEXT_PAGE } from '../../grapqhl/queries';\nimport { CustomInput } from '../../components/Utils/CustomInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const HomePage = () => {\n  _s();\n\n  const [isSorted, setIsSorted] = useState(false);\n  const [currentPage, setCurrentPage] = useState('');\n  const [requestedPage, setRequestedPage] = useState('');\n  const people = useStoreState(state => state.people);\n  const addPeopleToState = useStoreActions(actions => actions.loadPeople);\n  const loadRequestedPage = useStoreActions(actions => actions.resetOrLoadPage);\n  const {\n    sortDesc\n  } = useStoreState(state => state);\n  const {\n    sortAsc\n  } = useStoreState(state => state);\n  const {\n    loading: isLoading,\n    data\n  } = useQuery(ALL_PEOPLE);\n  const [next, {\n    loading: nextPageIsLoading,\n    data: nextData\n  }] = useLazyQuery(NEXT_PAGE);\n  const [requestPage, {\n    loading: requestedPageIsLoading,\n    data: requestedPageData\n  }] = useLazyQuery(NEXT_PAGE);\n  useEffect(() => {\n    if (data) loadRequestedPage(data.getAllPeople);\n  }, [data, loadRequestedPage]);\n  useEffect(() => {\n    if (nextData) addPeopleToState(nextData.next);\n  }, [nextData, addPeopleToState]);\n  useEffect(() => {\n    if (requestedPageData) loadRequestedPage(requestedPageData.next);\n  }, [requestedPageData, loadRequestedPage]);\n\n  const handleNext = () => {\n    const newPage = currentPage === '' ? 2 : parseInt(currentPage, 10) + 1;\n    next({\n      variables: {\n        pageNumber: newPage.toString()\n      }\n    });\n    setCurrentPage(newPage.toString());\n  };\n\n  const handlePageRequest = () => {\n    requestPage({\n      variables: {\n        pageNumber: requestedPage.toString()\n      }\n    });\n  };\n\n  const handleSort = () => {\n    if (!isSorted) {\n      const sort = sortDesc;\n      sort();\n    } else {\n      const sort = sortAsc;\n      sort();\n    }\n\n    setIsSorted(!isSorted);\n  };\n\n  const handlePageNumberReset = () => {\n    setRequestedPage('');\n    requestPage({\n      variables: {\n        pageNumber: '1'\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"toolbar\",\n      children: [/*#__PURE__*/_jsxDEV(SearchBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleSort,\n        children: [\"Sort\", isSorted ? /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faSortAlphaUp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 24\n        }, this) : /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faSortAlphaDown\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 69\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CustomInput, {\n        isLoading: requestedPageIsLoading,\n        onChange: e => setRequestedPage(e.target.value),\n        handleSubmit: handlePageRequest,\n        handleReset: handlePageNumberReset,\n        value: requestedPage,\n        placeholder: \"Request page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"loader\",\n      children: /*#__PURE__*/_jsxDEV(Loader, {\n        type: \"RevolvingDot\",\n        color: \"#1476F2\",\n        height: 100,\n        width: 100\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 49\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 24\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"character__list\",\n      children: people.map((person, i) => /*#__PURE__*/_jsxDEV(Card, {\n        person: person,\n        motionKey: i + 1\n      }, i * (Math.random() * 50), false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 23\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), !isLoading && people.length > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"load__cta\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleNext,\n        children: !nextPageIsLoading ? 'Load More' : /*#__PURE__*/_jsxDEV(Loader, {\n          type: \"ThreeDots\",\n          color: \"#fff\",\n          height: 20,\n          width: 15\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 53\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n_s(HomePage, \"PI2MqUkRwBHqzNiPHiiMQsNltZM=\", false, function () {\n  return [useStoreState, useStoreActions, useStoreActions, useStoreState, useStoreState, useQuery, useLazyQuery, useLazyQuery];\n});\n\n_c = HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["/home/antonio/Documents/SovTech/Client/src/pages/HomePage/HomePage.tsx"],"names":["React","useEffect","useState","Loader","FontAwesomeIcon","faSortAlphaDown","faSortAlphaUp","useQuery","useLazyQuery","useStoreActions","useStoreState","SearchBar","Card","ALL_PEOPLE","NEXT_PAGE","CustomInput","HomePage","isSorted","setIsSorted","currentPage","setCurrentPage","requestedPage","setRequestedPage","people","state","addPeopleToState","actions","loadPeople","loadRequestedPage","resetOrLoadPage","sortDesc","sortAsc","loading","isLoading","data","next","nextPageIsLoading","nextData","requestPage","requestedPageIsLoading","requestedPageData","getAllPeople","handleNext","newPage","parseInt","variables","pageNumber","toString","handlePageRequest","handleSort","sort","handlePageNumberReset","e","target","value","map","person","i","Math","random","length"],"mappings":"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","sourcesContent":["import './HomePage.css';\nimport React, {\n  FC,\n  useEffect,\n  useState,\n} from 'react';\nimport Loader from 'react-loader-spinner';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSortAlphaDown, faSortAlphaUp } from '@fortawesome/free-solid-svg-icons';\nimport { useQuery, useLazyQuery } from '@apollo/client';\nimport { useStoreActions, useStoreState } from '../../store';\nimport { SearchBar } from '../../components/Custom/SearchBar/SearchBar';\nimport { Card } from '../../components/Custom/Card/Card';\nimport { ALL_PEOPLE, NEXT_PAGE } from '../../grapqhl/queries';\nimport { CustomInput } from '../../components/Utils/CustomInput';\n\nexport const HomePage: FC = () => {\n  const [isSorted, setIsSorted] = useState<boolean>(false);\n  const [currentPage, setCurrentPage] = useState<string>('');\n  const [requestedPage, setRequestedPage] = useState<string>('');\n  const people = useStoreState((state) => state.people);\n  const addPeopleToState = useStoreActions((actions) => actions.loadPeople);\n  const loadRequestedPage = useStoreActions((actions) => actions.resetOrLoadPage);\n  const { sortDesc } = useStoreState((state) => state);\n  const { sortAsc } = useStoreState((state) => state);\n  const { loading: isLoading, data } = useQuery(ALL_PEOPLE);\n  const [next, { loading: nextPageIsLoading, data: nextData }] = useLazyQuery(NEXT_PAGE);\n  const [requestPage, { loading: requestedPageIsLoading, data: requestedPageData }] = useLazyQuery(NEXT_PAGE);\n\n  useEffect(() => {\n    if (data) loadRequestedPage(data.getAllPeople);\n  }, [data, loadRequestedPage]);\n\n  useEffect(() => {\n    if (nextData) addPeopleToState(nextData.next);\n  }, [nextData, addPeopleToState]);\n\n  useEffect(() => {\n    if (requestedPageData) loadRequestedPage(requestedPageData.next);\n  }, [requestedPageData, loadRequestedPage]);\n\n  const handleNext = () => {\n    const newPage = currentPage === '' ? 2 : parseInt(currentPage, 10) + 1;\n    next({ variables: { pageNumber: newPage.toString() } });\n    setCurrentPage(newPage.toString());\n  };\n\n  const handlePageRequest = () => { requestPage({ variables: { pageNumber: requestedPage.toString() } }); };\n\n  const handleSort = () => {\n    if (!isSorted) {\n      const sort = sortDesc;\n      sort();\n    } else {\n      const sort = sortAsc;\n      sort();\n    }\n\n    setIsSorted(!isSorted);\n  };\n\n  const handlePageNumberReset = () => {\n    setRequestedPage('');\n    requestPage({ variables: { pageNumber: '1' } });\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"toolbar\">\n        <SearchBar />\n        <button type=\"button\" onClick={ handleSort }>\n          Sort\n          {\n            isSorted ? <FontAwesomeIcon icon={ faSortAlphaUp } /> : <FontAwesomeIcon icon={ faSortAlphaDown } />\n          }\n        </button>\n\n        <CustomInput\n          isLoading={ requestedPageIsLoading }\n          onChange={ (e: any) => setRequestedPage(e.target.value) }\n          handleSubmit={ handlePageRequest }\n          handleReset={ handlePageNumberReset }\n          value={ requestedPage }\n          placeholder=\"Request page\"\n        />\n      </div>\n\n      {\n          isLoading ? (<span className=\"loader\"><Loader type=\"RevolvingDot\" color=\"#1476F2\" height={ 100 } width={ 100 } /></span>) : (\n            <div className=\"character__list\">\n              {\n                    people.map((person: any, i) => (\n                      <Card person={ person } key={ i * (Math.random() * 50) } motionKey={ i + 1 } />\n                    ))\n                }\n            </div>\n          )\n      }\n\n      {\n        (!isLoading && people.length > 1) && (\n          <div className=\"load__cta\">\n            <button type=\"button\" onClick={ handleNext }>\n              { !nextPageIsLoading ? 'Load More' : (<Loader type=\"ThreeDots\" color=\"#fff\" height={ 20 } width={ 15 } />) }\n            </button>\n          </div>\n        )\n      }\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}