{"ast":null,"code":"var _jsxFileName = \"/home/antonio/Documents/SovTech/Client/src/components/Utils/CustomInput.tsx\";\nimport './CustomInput.css';\nimport React from 'react';\nimport { faSearch, faWindowClose } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport Loader from 'react-loader-spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CustomInput = props => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"custom-input\",\n  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n    type: \"text\",\n    placeholder: props.placeholder,\n    className: \"custom-input__input\",\n    onChange: props.onChange,\n    value: props.value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this), props.value && props.handleReset && /*#__PURE__*/_jsxDEV(\"button\", {\n    type: \"button\",\n    className: \"custom-input__reset\",\n    \"aria-label\": \"clear\",\n    onClick: props.handleReset,\n    children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      icon: faWindowClose,\n      color: \"#1476F2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"custom-input__cta\",\n    onClick: props.handleSubmit,\n    children: props.isLoading ? /*#__PURE__*/_jsxDEV(Loader, {\n      type: \"TailSpin\",\n      height: 12,\n      width: 12,\n      color: \"#fff\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 28\n    }, this) : /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      icon: faSearch,\n      color: \"#fff\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 99\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 8,\n  columnNumber: 3\n}, this);\n_c = CustomInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomInput\");","map":{"version":3,"sources":["/home/antonio/Documents/SovTech/Client/src/components/Utils/CustomInput.tsx"],"names":["React","faSearch","faWindowClose","FontAwesomeIcon","Loader","CustomInput","props","placeholder","onChange","value","handleReset","handleSubmit","isLoading"],"mappings":";AAAA,OAAO,mBAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,aAAnB,QAAwC,mCAAxC;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAEA,OAAO,MAAMC,WAAW,GAAIC,KAAD,iBACzB;AAAK,EAAA,SAAS,EAAC,cAAf;AAAA,0BACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAGA,KAAK,CAACC,WAFtB;AAGE,IAAA,SAAS,EAAC,qBAHZ;AAIE,IAAA,QAAQ,EAAGD,KAAK,CAACE,QAJnB;AAKE,IAAA,KAAK,EAAGF,KAAK,CAACG;AALhB;AAAA;AAAA;AAAA;AAAA,UADF,EASKH,KAAK,CAACG,KAAN,IAAeH,KAAK,CAACI,WAAtB,iBACE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,qBAAhC;AAAsD,kBAAW,OAAjE;AAAyE,IAAA,OAAO,EAAGJ,KAAK,CAACI,WAAzF;AAAA,2BACE,QAAC,eAAD;AAAiB,MAAA,IAAI,EAAGR,aAAxB;AAAwC,MAAA,KAAK,EAAC;AAA9C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UAVN,eAeE;AAAQ,IAAA,SAAS,EAAC,mBAAlB;AAAsC,IAAA,OAAO,EAAGI,KAAK,CAACK,YAAtD;AAAA,cAEIL,KAAK,CAACM,SAAN,gBAAmB,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,UAAb;AAAwB,MAAA,MAAM,EAAG,EAAjC;AAAsC,MAAA,KAAK,EAAG,EAA9C;AAAmD,MAAA,KAAK,EAAC;AAAzD;AAAA;AAAA;AAAA;AAAA,YAAnB,gBAA0F,QAAC,eAAD;AAAiB,MAAA,IAAI,EAAGX,QAAxB;AAAmC,MAAA,KAAK,EAAC;AAAzC;AAAA;AAAA;AAAA;AAAA;AAF9F;AAAA;AAAA;AAAA;AAAA,UAfF;AAAA;AAAA;AAAA;AAAA;AAAA,QADK;KAAMI,W","sourcesContent":["import './CustomInput.css';\nimport React from 'react';\nimport { faSearch, faWindowClose } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport Loader from 'react-loader-spinner';\n\nexport const CustomInput = (props: any) => (\n  <div className=\"custom-input\">\n    <input\n      type=\"text\"\n      placeholder={ props.placeholder }\n      className=\"custom-input__input\"\n      onChange={ props.onChange }\n      value={ props.value }\n    />\n    {\n      (props.value && props.handleReset) && (\n        <button type=\"button\" className=\"custom-input__reset\" aria-label=\"clear\" onClick={ props.handleReset }>\n          <FontAwesomeIcon icon={ faWindowClose } color=\"#1476F2\" />\n        </button>\n      )\n    }\n    <button className=\"custom-input__cta\" onClick={ props.handleSubmit }>\n      {\n        props.isLoading ? (<Loader type=\"TailSpin\" height={ 12 } width={ 12 } color=\"#fff\" />) : (<FontAwesomeIcon icon={ faSearch } color=\"#fff\" />)\n      }\n    </button>\n  </div>\n);\n"]},"metadata":{},"sourceType":"module"}